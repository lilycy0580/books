import numpy as np

if __name__ == '__main__':
    # Repeat节点
    N, D = 7, 8
    x = np.random.randn(1, D)               # 输入         (1, 8)
    y = np.repeat(x, N, axis=0)             # 正向传播      (7, 8)  7个样本    axis=0:按列操作
    dy = np.random.randn(N, D)              # 假设的梯度     (7, 8)
    dx = np.sum(dy, axis=0, keepdims=True)  # 反向传播      (1, 8)  按列求和

    """
    x
    [[-0.06433284  1.40740809  0.66164492  0.00376753  0.53415135  0.48916275   0.2114221   1.96949427]]
    y
    [[-0.06433284  1.40740809  0.66164492  0.00376753  0.53415135  0.48916275   0.2114221   1.96949427]
     [-0.06433284  1.40740809  0.66164492  0.00376753  0.53415135  0.48916275   0.2114221   1.96949427]
     [-0.06433284  1.40740809  0.66164492  0.00376753  0.53415135  0.48916275   0.2114221   1.96949427]
     [-0.06433284  1.40740809  0.66164492  0.00376753  0.53415135  0.48916275   0.2114221   1.96949427]
     [-0.06433284  1.40740809  0.66164492  0.00376753  0.53415135  0.48916275   0.2114221   1.96949427]
     [-0.06433284  1.40740809  0.66164492  0.00376753  0.53415135  0.48916275   0.2114221   1.96949427]
     [-0.06433284  1.40740809  0.66164492  0.00376753  0.53415135  0.48916275   0.2114221   1.96949427]]
     dy
    [[-0.41635864 -0.08900442 -1.07323609 -0.606362    1.8949071   0.60638116  -1.29796853 -0.68820565]
     [ 1.30332613  0.46379802  0.05315969  0.3943988   1.28355132  1.35678496  -0.80081     0.86710851]
     [ 1.14739596  0.57531915  0.20978569 -1.11542387  0.50660799  0.80926796   2.04922216  0.32627447]
     [ 1.86521451 -0.2260953  -0.17892623 -0.04388428 -0.35162538  0.37528264   0.80017556  0.17744376]
     [-0.35451387  1.42523028 -1.17945896 -0.43166664 -0.65945249  0.60500782   1.80674388  1.93897044]
     [-0.51334009 -1.48988511 -0.3632689  -0.64807382 -0.26432035  0.3587294  -0.35026163  1.74704694]
     [ 0.65436382  0.07354516 -0.29477454  0.20096361 -0.18792404  0.95059436   0.8126874   0.89678589]]
     dx  
    [[ 3.68608781  0.73290777 -2.82671933 -2.2500482   2.22174416  5.0620483   3.01978883  5.26542435]]     
    """
    
    # Sum节点
    N, D = 7, 8
    x = np.random.randn(N, D)               # 输入         (7, 8)
    y = np.sum(x, axis=0, keepdims=True)    # 正向传播      (1, 8)   按列求和
    dy = np.random.randn(1, D)              # 假设的梯度     (1, 8)
    dx = np.repeat(dy, N, axis=0)           # 反向传播      (7, 8)

    """
    x
    [[-0.65487875 -0.56799922 -1.36048722  0.51380385  1.05895375 -0.02621937   -1.14241729 -1.06578023]
    [ 0.47731295 -1.73955487  0.47322721 -0.43098803  1.06813718  2.02286412    0.19752212  1.0638926 ]
    [ 0.40729785  1.52279274  1.69146572 -0.24901122 -1.67066759 -0.03997889    2.27206843  0.45297673]
    [-2.11030958  0.4664918  -0.77408725 -0.50805883 -0.37958405  1.52792134    1.44025645  0.98877866]
    [ 0.27163806  0.84386506 -0.69184242 -1.04742061  0.4272003  -0.78104906    0.48823294  1.78168383]
    [-0.32552844 -1.81397834  0.3039727  -0.2064558   0.95762451 -1.20177351    0.50303544  0.75390258]
    [ 0.33826335  1.89505472 -1.10633218  1.5426096   0.14709546 -1.64293171    -1.27419665 -0.21106422]]
    y
    [[-1.59620457  0.60667188 -1.46408345 -0.38552102  1.60875956 -0.14116709   2.48450144  3.76438995]]
    dy
    [[ 1.02517654  0.61401781 -1.0177456  -0.02068643 -0.99212588  1.29637925   -0.78480449  1.24245823]]
    dx
    [[ 1.02517654  0.61401781 -1.0177456  -0.02068643 -0.99212588  1.29637925    -0.78480449  1.24245823]
    [ 1.02517654  0.61401781 -1.0177456  -0.02068643 -0.99212588  1.29637925    -0.78480449  1.24245823]
    [ 1.02517654  0.61401781 -1.0177456  -0.02068643 -0.99212588  1.29637925    -0.78480449  1.24245823]
    [ 1.02517654  0.61401781 -1.0177456  -0.02068643 -0.99212588  1.29637925    -0.78480449  1.24245823]
    [ 1.02517654  0.61401781 -1.0177456  -0.02068643 -0.99212588  1.29637925    -0.78480449  1.24245823]
    [ 1.02517654  0.61401781 -1.0177456  -0.02068643 -0.99212588  1.29637925    -0.78480449  1.24245823]
    [ 1.02517654  0.61401781 -1.0177456  -0.02068643 -0.99212588  1.29637925    -0.78480449  1.24245823]]
    """

    # MatMul节点
    a = np.array([1, 2, 3])
    b = np.array([4, 5, 6])

